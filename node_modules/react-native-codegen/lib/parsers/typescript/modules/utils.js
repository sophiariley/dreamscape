/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 *
 * @format
 */
<<<<<<< HEAD
<<<<<<< HEAD

=======
>>>>>>> origin/Sophia's-branch
=======
>>>>>>> origin
'use strict';

function unwrapNullable(x) {
  if (x.type === 'NullableTypeAnnotation') {
    return [x.typeAnnotation, true];
  }
<<<<<<< HEAD
<<<<<<< HEAD
=======

>>>>>>> origin
  return [x, false];
}
=======

<<<<<<< HEAD
  return [x, false];
}

>>>>>>> origin/Sophia's-branch
=======
>>>>>>> origin
function wrapNullable(nullable, typeAnnotation) {
  if (!nullable) {
    return typeAnnotation;
  }
<<<<<<< HEAD
<<<<<<< HEAD
=======

>>>>>>> origin/Sophia's-branch
=======

>>>>>>> origin
  return {
    type: 'NullableTypeAnnotation',
    typeAnnotation,
  };
}
<<<<<<< HEAD
<<<<<<< HEAD
=======

>>>>>>> origin/Sophia's-branch
=======

>>>>>>> origin
module.exports = {
  unwrapNullable,
  wrapNullable,
};
